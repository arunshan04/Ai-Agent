import axios from 'axios';

/**
 * Fetches all tracks from the API.
 */
export const getTracks = async () => {
    const response = await axios.get('/api/tracks/');
    return response.data;
};

/**
 * Fetches all hosts from the API.
 */
export const getHosts = async () => {
    const response = await axios.get('/api/hosts/');
    return response.data;
};

/**
 * Fetches all package vulnerabilities from the API.
 */
export const getPackageVulnerabilities = async () => {
    const response = await axios.get('/api/package-vulnerabilities/');
    return response.data;
};

/**
 * Fetches the detailed vulnerability data for a specific track.
 * @param {number} trackId - The ID of the track.
 */
export const getTrackDetail = async (trackId) => {
    const response = await axios.get(`/api/track-detail/${trackId}/`);
    return response.data;
};

/**
 * Fetches all CVE analysis rows from the API.
 */
export const getCVEAnalysis = async () => {
    const response = await axios.get('/api/cve-analysis/');
    return response.data;
};

/**
 * Fetches all track analysis data from the API (joined cve_analysis, tracks, hosts, packages).
 * If trackName is provided, it will be sent as a query parameter.
 */
export const getTrackAnalysis = async (trackName) => {
    let url = '/api/track-analysis/';
    if (trackName) {
        url += `?track_name=${encodeURIComponent(trackName)}`;
    }
    const response = await axios.get(url);
    return response.data;
};